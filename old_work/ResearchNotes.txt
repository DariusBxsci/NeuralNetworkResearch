-- The purpose of this document is to record notes/reflect about each portion of our research and about different ideas regarding the direction of the project --

USEFUL/INTERESTING PAPERS:
	Symbolic reasoning in neural nets: https://www.aaai.org/ocs/index.php/SSS/SSS15/paper/viewPDFInterstitial/10281/10029

Addition/Subtraction Network:
	-Input to a network may be represented as a list, then passed into the eval() function


Input Permutation Network:
	-Use a permutation matrix to reformat an expression such as 'a + b + c - d' into one which can be parsed by eval() 
	-Write an algorithm to generalize the matrix for any size of the expression
	-The resulting expression should look something like: '- + + a b c d'

Lollipop model:
	-Several inputs and a single output
	-The inputs are not ordered, but the inputs themselves will be tuples such as
		[2, 1] [+, 0] [3, 2],
		which have an operand or opertator in the first index, and the position of that element in the second
	-Possible extension:
		-implement some sort of simple algorithm to determine the correct position of inputs given some output examples
			-RESEARCH QUESTION: ^^^ Is this possible? ^^^

Abstract Syntax Tree
	-Operators are interchangeable, just as operands are.
	-Can be implemented similarly to binary trees

Combining Logical and Numerical values:
	-simply turning true to 1 and false to 0 works well with multiplication, but is useless with addition and subtraction, and is unusable with division

---------------------------------------------------------------------------------------------------------------------------------------------------------------

Notes regarding the project as a whole:

    -I found a recent review on Deep Learning which may be useful:
        http://pages.cs.wisc.edu/~dyer/cs540/handouts/deep-learning-nature2015.pdf

    -Looking at these papers:
        http://www.ics.uci.edu/~welling/teaching/273ASpring09/lecun-89e.pdf
        http://papers.nips.cc/paper/293-handwritten-digit-recognition-with-a-back-propagation-network.pdf
        http://www.dengfanxin.cn/wp-content/uploads/2016/03/1998Lecun.pdf
        
        I think that the abstract should be written once the direction of the project has been fully formalized. Each of the above
        abstracts give brief overview of the project, which I don't think can be done until more work has been done.

        Also, is it a bad idea if the project involves an implementation of something rather than a demonstration? Is an implementation considered Science?
        Some of the above papers seem to be purely implementations (handwritten digit recognition especially).
