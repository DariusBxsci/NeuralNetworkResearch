\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\bibstyle{abbrvnat}
\@writefile{toc}{\contentsline {section}{\numberline {1}Background}{4}{section.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Three abstract trees that each represent a simple decision using numerical and/or binary categorical information\relax }}{4}{figure.caption.2}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Methods}{5}{section.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Network Construction}{5}{subsection.2.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Single neuron receiving ordered intputs. \relax }}{5}{figure.caption.3}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{fig:sig-neuron}{{2}{5}{Single neuron receiving ordered intputs. \relax }{figure.caption.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Using each arithmetic operator with a logical operand}{5}{subsection.2.2}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces An Abstract Syntax Tree of arithmetic operations.\relax }}{6}{figure.caption.4}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces An Abstract Syntax Tree of logical operations.\relax }}{6}{figure.caption.5}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Abstract Syntax Trees of logical and arithmetic operations.\relax }}{7}{figure.caption.6}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces A syntax tree which models how many years one person is older than another, using a combination of Arithmetic and Logical computation.\relax }}{7}{figure.caption.7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}An alternative solution}{8}{subsection.2.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4}Combining computation through conditional statements}{9}{subsection.2.4}}
\bibdata{references}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces A syntax tree that defines a procedure for counting the number of primes up to a certain value. The procedure begins with NumPrimes and CurrentValue set to $0$, and MaxValue set to the highest value to check for prime status. isPrime is a function that returns $True$ if the input value is a prime number, and $False$ if it isn't.  \relax }}{10}{figure.caption.8}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Results}{10}{section.3}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Conclusions}{10}{section.4}}
